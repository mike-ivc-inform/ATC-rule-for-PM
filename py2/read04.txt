WARNING: Implicitly replacing the Component attribute obj (type=<class
    'pyomo.core.base.objective.ScalarObjective'>) on block unknown with a new
    Component (type=<class 'pyomo.core.base.objective.ScalarObjective'>). This
    is usually indicative of a modelling error. To avoid this warning, use
    block.del_component() and block.add_component().
ERROR: Rule failed when generating expression for Constraint
    workload_constraint with index 1: AttributeError: 'ConcreteModel' object
    has no attribute 'c'
ERROR: Constructing component 'workload_constraint' from data=None failed:
    AttributeError: 'ConcreteModel' object has no attribute 'c'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-6-30b9834b448f> in <module>
     13 def workload_rule(model, j):
     14     return sum(model.c[i, j] * model.x[i, j] for i in model.I) <= model.T[j]
---> 15 model.workload_constraint = Constraint(model.J, rule=workload_rule)
     16 
     17 # Binary variable U constraints

C:\Anaconda3\lib\site-packages\pyomo\core\base\block.py in __setattr__(self, name, val)
    539                 # Pyomo components are added with the add_component method.
    540                 #
--> 541                 self.add_component(name, val)
    542             else:
    543                 #

C:\Anaconda3\lib\site-packages\pyomo\core\base\block.py in add_component(self, name, val)
   1101                              _blockName, str(data))
   1102             try:
-> 1103                 val.construct(data)
   1104             except:
   1105                 err = sys.exc_info()[1]

C:\Anaconda3\lib\site-packages\pyomo\core\base\constraint.py in construct(self, data)
    742                 # Bypass the index validation and create the member directly
    743                 for index in self.index_set():
--> 744                     self._setitem_when_not_present(index, rule(block, index))
    745         except Exception:
    746             err = sys.exc_info()[1]

C:\Anaconda3\lib\site-packages\pyomo\core\base\initializer.py in __call__(self, parent, idx)
    250             return self._fcn(parent, *idx)
    251         else:
--> 252             return self._fcn(parent, idx)
    253 
    254 

<ipython-input-6-30b9834b448f> in workload_rule(model, j)
     12 # Workload constraint for each repair team
     13 def workload_rule(model, j):
---> 14     return sum(model.c[i, j] * model.x[i, j] for i in model.I) <= model.T[j]
     15 model.workload_constraint = Constraint(model.J, rule=workload_rule)
     16 

<ipython-input-6-30b9834b448f> in <genexpr>(.0)
     12 # Workload constraint for each repair team
     13 def workload_rule(model, j):
---> 14     return sum(model.c[i, j] * model.x[i, j] for i in model.I) <= model.T[j]
     15 model.workload_constraint = Constraint(model.J, rule=workload_rule)
     16 

C:\Anaconda3\lib\site-packages\pyomo\core\base\block.py in __getattr__(self, val)
    519         # Since the base classes don't support getattr, we can just
    520         # throw the "normal" AttributeError
--> 521         raise AttributeError("'%s' object has no attribute '%s'"
    522                              % (self.__class__.__name__, val))
    523 

AttributeError: 'ConcreteModel' object has no attribute 'c'
------------------------------------------------------------------------
ERROR: Rule failed when generating expression for Objective obj with index
    None: AttributeError: 'ConcreteModel' object has no attribute 'I'
ERROR: Constructing component 'obj' from data=None failed: AttributeError:
    'ConcreteModel' object has no attribute 'I'
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-14-30b9834b448f> in <module>
      2 def obj_rule(model):
      3     return sum(model.w[i] * model.z[i] for i in model.I)
----> 4 model.obj = Objective(rule=obj_rule, sense=maximize)
      5 
      6 # Constraints

C:\Anaconda3\lib\site-packages\pyomo\core\base\block.py in __setattr__(self, name, val)
    539                 # Pyomo components are added with the add_component method.
    540                 #
--> 541                 self.add_component(name, val)
    542             else:
    543                 #

C:\Anaconda3\lib\site-packages\pyomo\core\base\block.py in add_component(self, name, val)
   1101                              _blockName, str(data))
   1102             try:
-> 1103                 val.construct(data)
   1104             except:
   1105                 err = sys.exc_info()[1]

C:\Anaconda3\lib\site-packages\pyomo\core\base\objective.py in construct(self, data)
    325                 for index in self.index_set():
    326                     ans = self._setitem_when_not_present(
--> 327                         index, rule(block, index))
    328                     if ans is not None:
    329                         ans.set_sense(self._init_sense(block, index))

C:\Anaconda3\lib\site-packages\pyomo\core\base\initializer.py in __call__(self, parent, idx)
    368 
    369     def __call__(self, parent, idx):
--> 370         return self._fcn(parent)
    371 
    372     def constant(self):

<ipython-input-14-30b9834b448f> in obj_rule(model)
      1 # Objective function
      2 def obj_rule(model):
----> 3     return sum(model.w[i] * model.z[i] for i in model.I)
      4 model.obj = Objective(rule=obj_rule, sense=maximize)
      5 

C:\Anaconda3\lib\site-packages\pyomo\core\base\block.py in __getattr__(self, val)
    519         # Since the base classes don't support getattr, we can just
    520         # throw the "normal" AttributeError
--> 521         raise AttributeError("'%s' object has no attribute '%s'"
    522                              % (self.__class__.__name__, val))
    523 

AttributeError: 'ConcreteModel' object has no attribute 'I'
